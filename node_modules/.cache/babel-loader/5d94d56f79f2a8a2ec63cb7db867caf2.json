{"ast":null,"code":"var _jsxFileName = \"/media/kamil/b7319a4f-ac8a-4e58-90d7-c6cf95693042/programowanie/webdev/sortVisualisation/src/App.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Navbar, Section, Button, Field, Control } from 'react-bulma-components';\nimport './App.css';\nimport { drawDataOnCanvas } from './utils/DrawData';\nimport alghoritms from './configs/algorithms';\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [chartData, setChartData] = useState([...Array(300)].map(() => Math.floor(Math.random() * 380 + 5)));\n  const [sortingMethod, setSortingMethod] = useState(alghoritms[0]);\n  let ctx = '';\n  useEffect(() => {\n    ctx = canvasRef.current.getContext('2d');\n    drawDataOnCanvas(chartData, ctx);\n  }, []);\n\n  const sort = () => {\n    let changed;\n    let temp;\n    let data = chartData;\n\n    for (let x = 0; x < data.length; x++) {\n      setInterval(() => {\n        data = chartData;\n        changed = false;\n\n        for (let i = 0; i < data.length; i++) {\n          if (data[i - 1] > data[i]) {\n            temp = data[i];\n            data[i] = data[i - 1];\n            data[i - 1] = temp;\n            changed = true;\n          }\n        }\n\n        drawDataOnCanvas(data, ctx);\n      }, 2000 * x + 100);\n    }\n\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    className: \"navbar\",\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Sort alghoritms visualised\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, sortingMethod.name), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Performance: \", sortingMethod.performance), /*#__PURE__*/React.createElement(Section, {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    width: \"1200\",\n    height: \"400\",\n    className: \"canvasElement\",\n    ref: canvasRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: sort,\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Sort using: \", sortingMethod.name, \" \"));\n}\n\nexport default App;","map":{"version":3,"sources":["/media/kamil/b7319a4f-ac8a-4e58-90d7-c6cf95693042/programowanie/webdev/sortVisualisation/src/App.js"],"names":["React","useRef","useEffect","useState","Navbar","Section","Button","Field","Control","drawDataOnCanvas","alghoritms","App","canvasRef","chartData","setChartData","Array","map","Math","floor","random","sortingMethod","setSortingMethod","ctx","current","getContext","sort","changed","temp","data","x","length","setInterval","i","console","log","name","performance"],"mappings":"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","sourcesContent":["import React, {useRef,useEffect,useState} from 'react';\nimport logo from './logo.svg';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Navbar,Section,Button, Field,Control } from 'react-bulma-components';\nimport './App.css';\nimport { drawDataOnCanvas } from './utils/DrawData';\nimport alghoritms from './configs/algorithms';\nfunction App() {\n  const canvasRef = useRef(null);\n  const [chartData, setChartData] = useState([...Array(300)].map(() => Math.floor(Math.random() * 380 + 5)));\n  const [sortingMethod, setSortingMethod] = useState(alghoritms[0])\n  let ctx = '';\n  useEffect(() => {\n    ctx = canvasRef.current.getContext('2d');\n    drawDataOnCanvas(chartData,ctx);\n  }, [])\n  const sort = () => {\n    let changed;\n    let temp;\n    let data = chartData;\n    for (let x = 0; x < data.length; x++){\n        setInterval(()=>{\n            data = chartData;\n            changed = false;\n            for (let i = 0; i < data.length; i++){\n                if (data[i-1] > data[i]){\n                    temp = data[i];\n                    data[i] = data[i-1];\n                    data[i-1] = temp;\n                    changed = true;\n                }\n            }\n            drawDataOnCanvas(data,ctx);\n        },2000*x+100)\n\n    }\n    console.log(data)\n  }\n  return (\n    <div className=\"App\">\n      <Navbar className='navbar' color='link'>\n        <h1>Sort alghoritms visualised</h1>\n      </Navbar>\n      <h2>{sortingMethod.name}</h2>\n      <h3>Performance: {sortingMethod.performance}</h3>\n      <Section className='main'>\n        <canvas width='1200' height='400' className='canvasElement' ref={canvasRef}></canvas>\n      </Section>\n      <Button className='button' onClick={sort} color='link'>Sort using: {sortingMethod.name} </Button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}