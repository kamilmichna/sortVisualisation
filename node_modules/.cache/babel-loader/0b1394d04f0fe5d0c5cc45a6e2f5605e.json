{"ast":null,"code":"var _jsxFileName = \"/media/kamil/b7319a4f-ac8a-4e58-90d7-c6cf95693042/programowanie/webdev/sortVisualisation/src/App.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Navbar, Section, Button } from 'react-bulma-components';\nimport './App.css';\nimport { drawDataOnCanvas } from './utils/DrawData';\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [chartData, setChartData] = useState([...Array(100)].map(() => Math.floor(Math.random() * 300 + 40)));\n  const [sortingMethodName, setSortingMethodName] = useState('Bubble Sort');\n  let ctx = '';\n  useEffect(() => {\n    ctx = canvasRef.current.getContext('2d');\n    drawDataOnCanvas(state, ctx);\n  }, []);\n\n  const sort = () => {\n    let changed;\n    let temp;\n    let data = chartData;\n\n    for (let x = 0; x < data.length; x++) {\n      setInterval(() => {\n        data = chartData;\n        changed = false;\n\n        for (let i = 0; i < data.length; i++) {\n          if (data[i - 1] > data[i]) {\n            temp = data[i];\n            data[i] = data[i - 1];\n            data[i - 1] = temp;\n            changed = true;\n          }\n        }\n\n        displayDataOnCanvas(data);\n      }, 2000 * x + 100);\n    }\n\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Section, {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    width: \"800\",\n    height: \"400\",\n    className: \"canvasElement\",\n    ref: canvasRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: sort,\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Sort using: \", sortingMethodName, \" \"));\n}\n\nexport default App;","map":{"version":3,"sources":["/media/kamil/b7319a4f-ac8a-4e58-90d7-c6cf95693042/programowanie/webdev/sortVisualisation/src/App.js"],"names":["React","useRef","useEffect","useState","Navbar","Section","Button","drawDataOnCanvas","App","canvasRef","chartData","setChartData","Array","map","Math","floor","random","sortingMethodName","setSortingMethodName","ctx","current","getContext","state","sort","changed","temp","data","x","length","setInterval","i","displayDataOnCanvas","console","log"],"mappings":"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","sourcesContent":["import React, {useRef,useEffect,useState} from 'react';\nimport logo from './logo.svg';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Navbar,Section,Button } from 'react-bulma-components';\nimport './App.css';\nimport { drawDataOnCanvas } from './utils/DrawData';\nfunction App() {\n  const canvasRef = useRef(null);\n  const [chartData, setChartData] = useState([...Array(100)].map(() => Math.floor(Math.random() * 300 + 40)));\n  const [sortingMethodName, setSortingMethodName] = useState('Bubble Sort')\n  let ctx = '';\n  useEffect(() => {\n    ctx = canvasRef.current.getContext('2d');\n    drawDataOnCanvas(state,ctx);\n  }, [])\n  const sort = () => {\n    let changed;\n    let temp;\n    let data = chartData;\n    for (let x = 0; x < data.length; x++){\n        setInterval(()=>{\n            data = chartData;\n            changed = false;\n            for (let i = 0; i < data.length; i++){\n                if (data[i-1] > data[i]){\n                    temp = data[i];\n                    data[i] = data[i-1];\n                    data[i-1] = temp;\n                    changed = true;\n                }\n            }\n            displayDataOnCanvas(data);\n        },2000*x+100)\n\n    }\n    console.log(data)\n  }\n  return (\n    <div className=\"App\">\n      <Navbar color='link'></Navbar>\n      <Section className='main'>\n        <canvas width='800' height='400' className='canvasElement' ref={canvasRef}></canvas>\n      </Section>\n      <Button className='button' onClick={sort} color='link'>Sort using: {sortingMethodName} </Button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}