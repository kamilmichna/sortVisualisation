{"ast":null,"code":"var _jsxFileName = \"/media/kamil/b7319a4f-ac8a-4e58-90d7-c6cf95693042/programowanie/webdev/sortVisualisation/src/App.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Navbar, Section, Button } from 'react-bulma-components';\nimport './App.css';\nimport { drawDataOnCanvas } from './utils/DrawData';\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [state, setstate] = useState([...Array(100)].map(() => Math.floor(Math.random() * 300 + 40)));\n  const [sortingMethodName, setSortingMethodName] = useState(initialState);\n  let ctx = '';\n  useEffect(() => {\n    ctx = canvasRef.current.getContext('2d');\n    drawDataOnCanvas(state, ctx);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Section, {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    width: \"800\",\n    height: \"400\",\n    className: \"canvasElement\",\n    ref: canvasRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    color: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Sort using: \", sortingMethodName, \" \"));\n}\n\nexport default App;","map":{"version":3,"sources":["/media/kamil/b7319a4f-ac8a-4e58-90d7-c6cf95693042/programowanie/webdev/sortVisualisation/src/App.js"],"names":["React","useRef","useEffect","useState","Navbar","Section","Button","drawDataOnCanvas","App","canvasRef","state","setstate","Array","map","Math","floor","random","sortingMethodName","setSortingMethodName","initialState","ctx","current","getContext"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAsBC,SAAtB,EAAgCC,QAAhC,QAA+C,OAA/C;;AAEA,OAAO,4DAAP;AACA,SAASC,MAAT,EAAgBC,OAAhB,EAAwBC,MAAxB,QAAsC,wBAAtC;AACA,OAAO,WAAP;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AACA,SAASC,GAAT,GAAe;AACb,QAAMC,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAC,GAAGS,KAAK,CAAC,GAAD,CAAT,EAAgBC,GAAhB,CAAoB,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAAhB,GAAsB,EAAjC,CAA1B,CAAD,CAAlC;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4Cf,QAAQ,CAACgB,YAAD,CAA1D;AACA,MAAIC,GAAG,GAAG,EAAV;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,GAAG,GAAGX,SAAS,CAACY,OAAV,CAAkBC,UAAlB,CAA6B,IAA7B,CAAN;AACAf,IAAAA,gBAAgB,CAACG,KAAD,EAAOU,GAAP,CAAhB;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,MAAM,EAAC,KAA3B;AAAiC,IAAA,SAAS,EAAC,eAA3C;AAA2D,IAAA,GAAG,EAAEX,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAKE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,KAAK,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAqDQ,iBAArD,MALF,CADF;AASD;;AAED,eAAeT,GAAf","sourcesContent":["import React, {useRef,useEffect,useState} from 'react';\nimport logo from './logo.svg';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Navbar,Section,Button } from 'react-bulma-components';\nimport './App.css';\nimport { drawDataOnCanvas } from './utils/DrawData';\nfunction App() {\n  const canvasRef = useRef(null);\n  const [state, setstate] = useState([...Array(100)].map(() => Math.floor(Math.random() * 300 + 40)));\n  const [sortingMethodName, setSortingMethodName] = useState(initialState)\n  let ctx = '';\n  useEffect(() => {\n    ctx = canvasRef.current.getContext('2d');\n    drawDataOnCanvas(state,ctx);\n  }, [])\n  return (\n    <div className=\"App\">\n      <Navbar color='link'></Navbar>\n      <Section className='main'>\n        <canvas width='800' height='400' className='canvasElement' ref={canvasRef}></canvas>\n      </Section>\n      <Button className='button' color='link'>Sort using: {sortingMethodName} </Button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}